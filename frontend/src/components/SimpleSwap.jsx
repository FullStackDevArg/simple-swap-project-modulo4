import { useState, useEffect } from 'react';
import { ethers } from 'ethers';

const SimpleSwap = () => {
  const [account, setAccount] = useState(null);
  const [amountA, setAmountA] = useState('');
  const [amountB, setAmountB] = useState('');
  const [currentSlide, setCurrentSlide] = useState(0);
  const contractAddress = '0x371992a4D1BaC196b85D1C45A2C77CA15e399eE6'; // Actualiza con tu direcci√≥n
  const tokenA = '0x03c4dac47eec187c5dc2b333c0743c6ef8a84afa'; // Actualiza
  const tokenB = '0x1e44dfac24406060acb91b6650768bfb577f7bd2'; // Actualiza
  const abi = [0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063ac41865a11610071578063ac41865a1461017d578063b8c876b1146101ad578063baa2abde146101dd578063dc5fa6c51461020e578063e8e337001461022c578063fb5c758f1461025e576100b4565b8063054d50d4146100b95780630fc63d10146100e957806315770f921461010757806319e36f3b1461012557806338ed1739146101435780635f64b55b1461015f575b600080fd5b6100d360048036038101906100ce9190611898565b61027a565b6040516100e091906118fa565b60405180910390f35b6100f1610301565b6040516100fe9190611956565b60405180910390f35b61010f610325565b60405161011c91906118fa565b60405180910390f35b61012d61032b565b60405161013a91906118fa565b60405180910390f35b61015d60048036038101906101589190611a02565b610331565b005b610167610925565b6040516101749190611956565b60405180910390f35b61019760048036038101906101929190611a9c565b610949565b6040516101a491906118fa565b60405180910390f35b6101c760048036038101906101c29190611adc565b610aae565b6040516101d491906118fa565b60405180910390f35b6101f760048036038101906101f29190611b09565b610ac6565b604051610205929190611bab565b60405180910390f35b610216611079565b60405161022391906118fa565b60405180910390f35b61024660048036038101906102419190611bd4565b61107f565b60405161025593929190611c8a565b60405180910390f35b61027860048036038101906102739190611cc1565b611641565b005b6000808411801561028b5750600083115b80156102975750600082115b6102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90611d5e565b60405180910390fd5b83836102e29190611dad565b82856102ee9190611de1565b6102f89190611e52565b90509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b60025481565b6103396117ff565b4281101561037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390611ecf565b60405180910390fd5b60028484905014801561040257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16848460008181106103d5576103d4611eef565b5b90506020020160208101906103ea9190611adc565b73ffffffffffffffffffffffffffffffffffffffff16145b801561048157507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168484600181811061045457610453611eef565b5b90506020020160208101906104699190611adc565b73ffffffffffffffffffffffffffffffffffffffff16145b6104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790611f6a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361052f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052690611fd6565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161058a9190611956565b602060405180830381865afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb919061200b565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106289190611956565b602060405180830381865afa158015610645573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610669919061200b565b9050600088836106799190611dad565b828a6106859190611de1565b61068f9190611e52565b9050878110156106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb90612084565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b8152600401610731939291906120a4565b6020604051808303816000875af1158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190612113565b6107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa9061218c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86836040518363ffffffff1660e01b815260040161080e9291906121ac565b6020604051808303816000875af115801561082d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108519190612113565b610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790612221565b60405180910390fd5b88600160008282546108a29190611dad565b9250508190555080600260008282546108bb9190612241565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a7588a8360405161090a929190611bab565b60405180910390a250505061091d61184e565b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480156109f157507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a27906122c1565b60405180910390fd5b6000600154118015610a4457506000600254115b610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a9061232d565b60405180910390fd5b600154670de0b6b3a7640000600254610a9c9190611de1565b610aa69190611e52565b905092915050565b60046020528060005260406000206000915090505481565b600080610ad16117ff565b42831015610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b90611ecf565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16148015610bba57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16145b610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf0906122c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5f90611fd6565b60405180910390fd5b86600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce19061232d565b60405180910390fd5b60006003549050600060015490506000600254905082828b610d0c9190611de1565b610d169190611e52565b945082818b610d259190611de1565b610d2f9190611e52565b935088851015610d74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6b90612399565b60405180910390fd5b87841015610db7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dae90612405565b60405180910390fd5b89600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e069190612241565b925050819055508960036000828254610e1f9190612241565b925050819055508460016000828254610e389190612241565b925050819055508360026000828254610e519190612241565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88876040518363ffffffff1660e01b8152600401610eb39291906121ac565b6020604051808303816000875af1158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef69190612113565b610f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2c9061218c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88866040518363ffffffff1660e01b8152600401610f909291906121ac565b6020604051808303816000875af1158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd39190612113565b611012576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100990612221565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd059868660405161105a929190611bab565b60405180910390a250505061106d61184e565b97509795505050505050565b60015481565b600080600061108c6117ff565b428410156110cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c690611ecf565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614801561117557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16145b6111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab906122c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121a90611fd6565b60405180910390fd5b6000600354905060006001549050600060025490506000830361124b578b95508a94506112c9565b600082848e61125a9190611de1565b6112649190611e52565b9050600082858e6112759190611de1565b61127f9190611e52565b90508082116112a9578d97508483836112989190611de1565b6112a29190611e52565b96506112c6565b8c96508484826112b99190611de1565b6112c39190611e52565b97505b50505b8986101561130c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130390612399565b60405180910390fd5b8885101561134f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134690612405565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016113ac939291906120a4565b6020604051808303816000875af11580156113cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ef9190612113565b61142e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114259061218c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161148b939291906120a4565b6020604051808303816000875af11580156114aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ce9190612113565b61150d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150490612221565b60405180910390fd5b60008314611531578183876115229190611de1565b61152c9190611e52565b611533565b855b935083600360008282546115479190611dad565b9250508190555083600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461159d9190611dad565b9250508190555085600160008282546115b69190611dad565b9250508190555084600260008282546115cf9190611dad565b925050819055508773ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e87878760405161162093929190611c8a565b60405180910390a250505061163361184e565b985098509895505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b815260040161169c9291906121ac565b6020604051808303816000875af11580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df9190612113565b61171e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171590612471565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016117799291906121ac565b6020604051808303816000875af1158015611798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bc9190612113565b6117fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f2906124dd565b60405180910390fd5b5050565b600260005403611844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183b90612549565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600080fd5b6000819050919050565b61187581611862565b811461188057600080fd5b50565b6000813590506118928161186c565b92915050565b6000806000606084860312156118b1576118b0611858565b5b60006118bf86828701611883565b93505060206118d086828701611883565b92505060406118e186828701611883565b9150509250925092565b6118f481611862565b82525050565b600060208201905061190f60008301846118eb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061194082611915565b9050919050565b61195081611935565b82525050565b600060208201905061196b6000830184611947565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261199657611995611971565b5b8235905067ffffffffffffffff8111156119b3576119b2611976565b5b6020830191508360208202830111156119cf576119ce61197b565b5b9250929050565b6119df81611935565b81146119ea57600080fd5b50565b6000813590506119fc816119d6565b92915050565b60008060008060008060a08789031215611a1f57611a1e611858565b5b6000611a2d89828a01611883565b9650506020611a3e89828a01611883565b955050604087013567ffffffffffffffff811115611a5f57611a5e61185d565b5b611a6b89828a01611980565b94509450506060611a7e89828a016119ed565b9250506080611a8f89828a01611883565b9150509295509295509295565b60008060408385031215611ab357611ab2611858565b5b6000611ac1858286016119ed565b9250506020611ad2858286016119ed565b9150509250929050565b600060208284031215611af257611af1611858565b5b6000611b00848285016119ed565b91505092915050565b600080600080600080600060e0888a031215611b2857611b27611858565b5b6000611b368a828b016119ed565b9750506020611b478a828b016119ed565b9650506040611b588a828b01611883565b9550506060611b698a828b01611883565b9450506080611b7a8a828b01611883565b93505060a0611b8b8a828b016119ed565b92505060c0611b9c8a828b01611883565b91505092959891949750929550565b6000604082019050611bc060008301856118eb565b611bcd60208301846118eb565b9392505050565b600080600080600080600080610100898b031215611bf557611bf4611858565b5b6000611c038b828c016119ed565b9850506020611c148b828c016119ed565b9750506040611c258b828c01611883565b9650506060611c368b828c01611883565b9550506080611c478b828c01611883565b94505060a0611c588b828c01611883565b93505060c0611c698b828c016119ed565b92505060e0611c7a8b828c01611883565b9150509295985092959890939650565b6000606082019050611c9f60008301866118eb565b611cac60208301856118eb565b611cb960408301846118eb565b949350505050565b60008060408385031215611cd857611cd7611858565b5b6000611ce685828601611883565b9250506020611cf785828601611883565b9150509250929050565b600082825260208201905092915050565b7f496e76616c696420696e70757400000000000000000000000000000000000000600082015250565b6000611d48600d83611d01565b9150611d5382611d12565b602082019050919050565b60006020820190508181036000830152611d7781611d3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611db882611862565b9150611dc383611862565b9250828201905080821115611ddb57611dda611d7e565b5b92915050565b6000611dec82611862565b9150611df783611862565b9250828202611e0581611862565b91508282048414831517611e1c57611e1b611d7e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e5d82611862565b9150611e6883611862565b925082611e7857611e77611e23565b5b828204905092915050565b7f446561646c696e65207265616368656400000000000000000000000000000000600082015250565b6000611eb9601083611d01565b9150611ec482611e83565b602082019050919050565b60006020820190508181036000830152611ee881611eac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420706174680000000000000000000000000000000000000000600082015250565b6000611f54600c83611d01565b9150611f5f82611f1e565b602082019050919050565b60006020820190508181036000830152611f8381611f47565b9050919050565b7f496e76616c69642027746f272061646472657373000000000000000000000000600082015250565b6000611fc0601483611d01565b9150611fcb82611f8a565b602082019050919050565b60006020820190508181036000830152611fef81611fb3565b9050919050565b6000815190506120058161186c565b92915050565b60006020828403121561202157612020611858565b5b600061202f84828501611ff6565b91505092915050565b7f496e73756666696369656e74206f757470757400000000000000000000000000600082015250565b600061206e601383611d01565b915061207982612038565b602082019050919050565b6000602082019050818103600083015261209d81612061565b9050919050565b60006060820190506120b96000830186611947565b6120c66020830185611947565b6120d360408301846118eb565b949350505050565b60008115159050919050565b6120f0816120db565b81146120fb57600080fd5b50565b60008151905061210d816120e7565b92915050565b60006020828403121561212957612128611858565b5b6000612137848285016120fe565b91505092915050565b7f5472616e736665722041206661696c6564000000000000000000000000000000600082015250565b6000612176601183611d01565b915061218182612140565b602082019050919050565b600060208201905081810360008301526121a581612169565b9050919050565b60006040820190506121c16000830185611947565b6121ce60208301846118eb565b9392505050565b7f5472616e736665722042206661696c6564000000000000000000000000000000600082015250565b600061220b601183611d01565b9150612216826121d5565b602082019050919050565b6000602082019050818103600083015261223a816121fe565b9050919050565b600061224c82611862565b915061225783611862565b925082820390508181111561226f5761226e611d7e565b5b92915050565b7f496e76616c696420746f6b656e20706169720000000000000000000000000000600082015250565b60006122ab601283611d01565b91506122b682612275565b602082019050919050565b600060208201905081810360008301526122da8161229e565b9050919050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b6000612317601683611d01565b9150612322826122e1565b602082019050919050565b600060208201905081810360008301526123468161230a565b9050919050565b7f496e73756666696369656e7420616d6f756e7441000000000000000000000000600082015250565b6000612383601483611d01565b915061238e8261234d565b602082019050919050565b600060208201905081810360008301526123b281612376565b9050919050565b7f496e73756666696369656e7420616d6f756e7442000000000000000000000000600082015250565b60006123ef601483611d01565b91506123fa826123b9565b602082019050919050565b6000602082019050818103600083015261241e816123e2565b9050919050565b7f417070726f76652041206661696c656400000000000000000000000000000000600082015250565b600061245b601083611d01565b915061246682612425565b602082019050919050565b6000602082019050818103600083015261248a8161244e565b9050919050565b7f417070726f76652042206661696c656400000000000000000000000000000000600082015250565b60006124c7601083611d01565b91506124d282612491565b602082019050919050565b600060208201905081810360008301526124f6816124ba565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612533601f83611d01565b915061253e826124fd565b602082019050919050565b6000602082019050818103600083015261256281612526565b905091905056fea2646970667358221220dcc43d66e8797dc9b2cb13fca76090c178bb3bad8351e7576d947e8a635ab10364736f6c63430008140033];

  const slides = [
    {
      title: 'Add Liquidity',
      content: (
        <>
          <input
            type="number"
            value={amountA}
            onChange={(e) => setAmountA(e.target.value)}
            placeholder="Amount A"
            className="border p-2 mb-2 w-full"
          />
          <input
            type="number"
            value={amountB}
            onChange={(e) => setAmountB(e.target.value)}
            placeholder="Amount B"
            className="border p-2 mb-2 w-full"
          />
          <button
            onClick={addLiquidity}
            className="bg-blue-500 text-white p-2 rounded"
          >
            Add Liquidity
          </button>
        </>
      ),
    },
    {
      title: 'Remove Liquidity',
      content: (
        <>
          <input
            type="number"
            value={amountA}
            onChange={(e) => setAmountA(e.target.value)}
            placeholder="Liquidity Amount"
            className="border p-2 mb-2 w-full"
          />
          <button
            onClick={removeLiquidity}
            className="bg-red-500 text-white p-2 rounded"
          >
            Remove Liquidity
          </button>
        </>
      ),
    },
    {
      title: 'Swap Tokens',
      content: (
        <>
          <input
            type="number"
            value={amountA}
            onChange={(e) => setAmountA(e.target.value)}
            placeholder="Amount In"
            className="border p-2 mb-2 w-full"
          />
          <button
            onClick={swapTokens}
            className="bg-green-500 text-white p-2 rounded"
          >
            Swap Tokens
          </button>
        </>
      ),
    },
    {
      title: 'Get Price',
      content: (
        <button
          onClick={getPrice}
          className="bg-purple-500 text-white p-2 rounded"
        >
          Get Price
        </button>
      ),
    },
  ];

  useEffect(() => {
    if (window.ethereum) {
      window.ethereum.request({ method: 'eth_requestAccounts' }).then(accounts => {
        setAccount(accounts[0]);
      });
    }
  }, []);

  const connectWallet = async () => {
    if (window.ethereum) {
      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
      setAccount(accounts[0]);
    }
  };

  const addLiquidity = async () => {
    if (!account) return alert('Please connect your wallet');
    const provider = new ethers.BrowserProvider(window.ethereum);
    const signer = await provider.getSigner();
    const contract = new ethers.Contract(contractAddress, abi, signer);
    const deadline = Math.floor(Date.now() / 1000) + 600; // 10 minutes
    const tx = await contract.addLiquidity(
      tokenA, tokenB, ethers.parseEther(amountA), ethers.parseEther(amountB),
      ethers.parseEther((amountA * 0.9).toString()), ethers.parseEther((amountB * 0.9).toString()),
      account, deadline
    );
    await tx.wait();
    alert('Liquidity added!');
  };

  const removeLiquidity = async () => {
    if (!account) return alert('Please connect your wallet');
    const provider = new ethers.BrowserProvider(window.ethereum);
    const signer = await provider.getSigner();
    const contract = new ethers.Contract(contractAddress, abi, signer);
    const deadline = Math.floor(Date.now() / 1000) + 600;
    const tx = await contract.removeLiquidity(
      tokenA, tokenB, ethers.parseEther(amountA),
      ethers.parseEther((amountA * 0.9).toString()), ethers.parseEther('0'),
      account, deadline
    );
    await tx.wait();
    alert('Liquidity removed!');
  };

  const swapTokens = async () => {
    if (!account) return alert('Please connect your wallet');
    const provider = new ethers.BrowserProvider(window.ethereum);
    const signer = await provider.getSigner();
    const contract = new ethers.Contract(contractAddress, abi, signer);
    const path = [tokenA, tokenB];
    const deadline = Math.floor(Date.now() / 1000) + 600;
    const tx = await contract.swapExactTokensForTokens(
      ethers.parseEther(amountA), ethers.parseEther((amountA * 0.9).toString()),
      path, account, deadline
    );
    await tx.wait();
    alert('Tokens swapped!');
  };

  const getPrice = async () => {
    if (!account) return alert('Please connect your wallet');
    const provider = new ethers.BrowserProvider(window.ethereum);
    const contract = new ethers.Contract(contractAddress, abi, provider);
    const price = await contract.getPrice(tokenA, tokenB);
    alert(`Price: ${ethers.formatEther(price)}`);
  };

  return (
    <div className="max-w-md mx-auto p-4">
      {!account && (
        <button onClick={connectWallet} className="bg-blue-500 text-white p-2 rounded mb-4">
          Connect Wallet
        </button>
      )}
      {account && (
        <div>
          <h1 className="text-2xl mb-4">SimpleSwap - Connected: {account}</h1>
          <div className="relative">
            <div className="overflow-hidden">
              <div
                className="flex transition-transform duration-300"
                style={{ transform: `translateX(-${currentSlide * 100}%)` }}
              >
                {slides.map((slide, index) => (
                  <div key={index} className="w-full flex-shrink-0 p-4">
                    <h2 className="text-xl mb-2">{slide.title}</h2>
                    {slide.content}
                  </div>
                ))}
              </div>
            </div>
            <button
              onClick={() => setCurrentSlide((prev) => (prev > 0 ? prev - 1 : slides.length - 1))}
              className="absolute left-0 top-1/2 transform -translate-y-1/2 bg-gray-500 text-white p-2 rounded"
            >
              ‚Üê
            </button>
            <button
              onClick={() => setCurrentSlide((prev) => (prev + 1) % slides.length)}
              className="absolute right-0 top-1/2 transform -translate-y-1/2 bg-gray-500 text-white p-2 rounded"
            >
              ‚Üí
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default SimpleSwap;